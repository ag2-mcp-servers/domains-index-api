# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:37:22+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class APIKeyInfo(BaseModel):
    customer_email: Optional[str] = Field(None, description='State')
    customer_name: Optional[str] = Field(None, description='State')
    expires: Optional[str] = Field(None, description='State')
    item_id: Optional[str] = Field(None, description='State')
    item_name: Optional[str] = Field(None, description='State')
    license: Optional[str] = Field(None, description='State')
    license_limit: Optional[str] = Field(None, description='State')
    price_id: Optional[str] = Field(None, description='State')
    success: Optional[str] = Field(None, description='State')


class MXRecords(BaseModel):
    exchange: Optional[str] = Field(None, description='MX domain')
    priority: Optional[int] = None


class ResponseParameters(BaseModel):
    next_page: Optional[str] = Field(None, description='Next page id')
    time: str = Field(..., description='Time took')
    total: Optional[int] = Field(None, description='Total days reported')


class UpdateModel(BaseModel):
    added: Optional[str] = Field(None, description='Updates added list')
    added_download: Optional[str] = Field(None, description='Download link for added')
    date: Optional[str] = Field(None, description='Update date')
    deleted: Optional[str] = Field(None, description='Updates deleted list')
    deleted_download: Optional[str] = Field(
        None, description='Download link for deleted'
    )


class ZoneInfo(BaseModel):
    description: Optional[List[str]] = None
    in_bundles: Optional[List[str]] = None
    includes: Optional[List[str]] = None
    type: str = Field(..., description='TLD type')
    zone: str = Field(..., description='TLD name')


class ZoneStatistics(BaseModel):
    date: datetime = Field(..., description='Report Date')
    dec: int = Field(..., description='Increase')
    inc: int = Field(..., description='Decrease')
    total: int = Field(..., description='Total number of records')
    zone: str = Field(..., description='TLD name')


class ZoneStats(ResponseParameters):
    statistics: Optional[List[ZoneStatistics]] = None


class InfoStatGetResponse(RootModel[List[ZoneStats]]):
    root: List[ZoneStats]


class InfoTldGetResponse(RootModel[List[ZoneInfo]]):
    root: List[ZoneInfo]


class Domains(BaseModel):
    A: Optional[List[str]] = None
    CNAME: Optional[List[str]] = None
    MX: Optional[List[MXRecords]] = None
    NS: Optional[List[str]] = None
    TXT: Optional[List[str]] = None
    country: Optional[str] = Field(None, description='Hosting Country')
    create_date: Optional[datetime] = Field(None, description='Domain creation date')
    domain: Optional[str] = Field(None, description='Domain name')
    isDead: Optional[str] = Field(None, description='If Domain is Dead')
    update_date: Optional[datetime] = Field(None, description='Domain last update date')


class SearchResults(ResponseParameters):
    domains: Optional[List[Domains]] = None
